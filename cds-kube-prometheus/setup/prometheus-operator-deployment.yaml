apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/version: v0.34.0
  name: prometheus-operator
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: v0.34.0
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        effect: "NoSchedule"
      - effect: NoSchedule
        key: node-role.cck.net/infra
      containers:
      - args:
        - --kubelet-service=kube-system/kubelet
        - --logtostderr=true
        #- --config-reloader-image=registry-bj.capitalonline.net/cck/coreos/configmap-reload:v0.0.1
        - --config-reloader-image=capitalonline/configmap-reload:v0.0.1
        #- --prometheus-config-reloader=registry-bj.capitalonline.net/cck/coreos/prometheus-config-reloader:v0.34.0
        - --prometheus-config-reloader=capitalonline/prometheus-config-reloader:v0.34.0
        #image: registry-bj.capitalonline.net/cck/coreos/prometheus-operator:v0.34.0
        image: capitalonline/prometheus-operator:v0.34.0
        name: prometheus-operator
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        beta.kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
        node-role.kubernetes.io/infra: ""
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus-operator
