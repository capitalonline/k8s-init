apiVersion: v1
kind: ServiceAccount
metadata:
  name: cds-node-agent
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:cds-node-agent
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cds-node-agent:apiserver-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cds-node-agent
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cds-node-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cds-node-agent
subjects:
  - kind: ServiceAccount
    name: cds-node-agent
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cds-node-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: cds-node-agent
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: cds-node-agent
    spec:
      containers:
        - image: registry-bj.capitalonline.net/cck/cds-node-agent:v1.0.0
          imagePullPolicy: Always
          securityContext:
            privileged: true
          name: cds-node-agent
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /proc
              name: proc
            - mountPath: /etc
              name: etc
            - mountPath: /run/systemd
              name: run-systemd
            - mountPath: /usr/bin/systemctl
              name: systemctl
            - mountPath: /usr/lib
              name: usr-lib
            - mountPath: /var/lib/kubelet
              name: var-lib-kubelet
      dnsPolicy: Default
      hostNetwork: true
      hostPID: true
      hostIPC: true
      restartPolicy: Always
      serviceAccountName: cds-node-agent
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.cck.net/infra
      volumes:
      - name: run-systemd
        hostPath:
          path: /run/systemd
          type: Directory
      - name: proc
        hostPath:
          path: /proc
          type: Directory
      - name: etc
        hostPath:
          path: /etc
          type: Directory
      - name: systemctl
        hostPath:
          path: /usr/bin/systemctl
          type: File
      - name: usr-lib
        hostPath:
          path: /usr/lib
          type: Directory
      - name: var-lib-kubelet
        hostPath:
          path: /var/lib/kubelet
          type: Directory